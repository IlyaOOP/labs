1. „то такое делегат?  ак определить делегат? 
это объект, предназначенный дл€ хранени€ ссылок на методы

2. Ќазначение делегатов. 
уменьшение кода 

3.  акие есть способы присваивани€ делегату адреса метода?  
Message mes; // 2. —оздаем переменную делегата
mes = GoodMorning; // 3. ѕрисваиваем этой переменной адрес метода
или
del = new D(HelloI); 

4. ѕо€сните назначение   метода Invoke. 
вызов метода делегата

5. „то такое группова€ адресаци€ делегата? 
Cоздание списка, или цепочки вызовов, дл€ методов, которые вызываютс€ автоматически при обращении к делегату 

6.  ак создать событие? 
public event EventHandler Go;

7.  ак событи€ св€заны с делегатами? ќпишите и по€сните схему взаимодействи€. 
—обыти€ построены на основе делегатов: с помощью делегатов вызываютс€ методы-обработчики событий. 
ѕоэтому создание событи€ в классе состоит из следующих частей: 
? описание делегата, задающего сигнатуру обработчиков событий; 
? описание событи€; 
? описание метода (методов), инициирующих событие

8. „то такое л€мбда-выражени€? ѕриведите пример л€мбда-выражени€ с несколькими параметрами. 
упрощенна€ запись анонимных методов
параметр => выражение 
(список_параметров) => выражение
FindMax maxint = (s1, s2) => s1 > s2 ? s1 : s2; 

9. „то такое ковариантность и контравариантность делегатов? „то это дает? 
ƒелегаты могут быть ковариантными и контравариантными.  овариантность делегата предполагает,
что возвращаемым типом может быть более производный тип.  онтрвариантность делегата предполагает,
что типом параметра может быть более универсальный тип.

10. ѕо€сните разницу между встроенными делегатами Action и Func. 